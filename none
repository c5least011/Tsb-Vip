--This file has been protected by Base64
bG9jYWwgcCA9IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllcgpsb2NhbCBydW5uaW5nID0gZmFsc2UKbG9jYWwgSHR0cFNlcnZpY2UgPSBnYW1lOkdldFNlcnZpY2UoIkh0dHBTZXJ2aWNlIikKbG9jYWwga2V5VVJMID0gImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9jNWxlYXN0MDExL1RzYi1WaXAvcmVmcy9oZWFkcy9tYWluL2tleSIKCmxvY2FsIGZ1bmN0aW9uIGdldEtleSgpCiAgICBsb2NhbCBzdWNjZXNzLCByZXNwb25zZSA9IHBjYWxsKGZ1bmN0aW9uKCkKICAgICAgICByZXR1cm4gSHR0cFNlcnZpY2U6R2V0QXN5bmMoa2V5VVJMKQogICAgZW5kKQogICAgcmV0dXJuIHN1Y2Nlc3MgYW5kIHJlc3BvbnNlIG9yIG5pbAplbmQKCmxvY2FsIGZ1bmN0aW9uIGdldFJhbmRvbVBsYXllcigpCiAgICBsb2NhbCBwbGF5ZXJzID0ge30KICAgIGZvciBfLCB2IGluIHBhaXJzKGdhbWUuUGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCiAgICAgICAgaWYgdiB+PSBwIGFuZCB2LkNoYXJhY3RlciBhbmQgdi5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSB0aGVuCiAgICAgICAgICAgIHRhYmxlLmluc2VydChwbGF5ZXJzLCB2KQogICAgICAgIGVuZAogICAgZW5kCiAgICByZXR1cm4gI3BsYXllcnMgPiAwIGFuZCBwbGF5ZXJzW21hdGgucmFuZG9tKDEsICNwbGF5ZXJzKV0gb3IgbmlsCmVuZAoKbG9jYWwgZnVuY3Rpb24gZm9sbG93UGxheWVycygpCiAgICBydW5uaW5nID0gdHJ1ZQogICAgd2hpbGUgcnVubmluZyBkbwogICAgICAgIGxvY2FsIHRhcmdldCA9IGdldFJhbmRvbVBsYXllcigpCiAgICAgICAgaWYgbm90IHRhcmdldCB0aGVuIHRhc2sud2FpdCgxKSBjb250aW51ZSBlbmQKCiAgICAgICAgcmVwZWF0CiAgICAgICAgICAgIGlmIG5vdCBydW5uaW5nIHRoZW4gcmV0dXJuIGVuZAogICAgICAgICAgICBpZiB0YXJnZXQuQ2hhcmFjdGVyIGFuZCB0YXJnZXQuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHAuQ2hhcmFjdGVyIHRoZW4KICAgICAgICAgICAgICAgIHAuQ2hhcmFjdGVyOldhaXRGb3JDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpLkNGcmFtZSA9IHRhcmdldC5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBDRnJhbWUubmV3KDAsIDAsIDMpCiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGVuZAogICAgICAgICAgICB0YXNrLndhaXQoMC4wMDEpCiAgICAgICAgdW50aWwgbm90IHRhcmdldC5DaGFyYWN0ZXIgb3Igbm90IHRhcmdldC5DaGFyYWN0ZXIuUGFyZW50CiAgICBlbmQKZW5kCgpsb2NhbCBmdW5jdGlvbiBmb2xsb3dEdW1teSgpCiAgICBydW5uaW5nID0gdHJ1ZQogICAgbG9jYWwgZCByZXBlYXQgZCA9IGdhbWUuV29ya3NwYWNlLkxpdmU6RmluZEZpcnN0Q2hpbGQoIldlYWtlc3QgRHVtbXkiKSB0YXNrLndhaXQoKSB1bnRpbCBkCiAgICBsb2NhbCB0ID0gZDpXYWl0Rm9yQ2hpbGQoIlRvcnNvIikKCiAgICB3aGlsZSBydW5uaW5nIGFuZCBkIGFuZCBkLlBhcmVudCBhbmQgdCBhbmQgdC5QYXJlbnQgZG8KICAgICAgICBwLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IHQuQ0ZyYW1lICogQ0ZyYW1lLm5ldygwLCAwLCAzKQogICAgICAgIHRhc2sud2FpdCgwLjAwMSkKICAgIGVuZAoKICAgIGQuQW5jZXN0cnlDaGFuZ2VkOkNvbm5lY3QoZnVuY3Rpb24oKQogICAgICAgIGlmIG5vdCBydW5uaW5nIHRoZW4gcmV0dXJuIGVuZAogICAgICAgIHJlcGVhdCB0YXNrLndhaXQoKSB1bnRpbCBnYW1lLldvcmtzcGFjZS5MaXZlOkZpbmRGaXJzdENoaWxkKCJXZWFrZXN0IER1bW15IikKICAgICAgICBkID0gZ2FtZS5Xb3Jrc3BhY2UuTGl2ZTpGaW5kRmlyc3RDaGlsZCgiV2Vha2VzdCBEdW1teSIpCiAgICAgICAgaWYgZCB0aGVuIHQgPSBkOldhaXRGb3JDaGlsZCgiVG9yc28iKSBmb2xsb3dEdW1teSgpIGVuZAogICAgZW5kKQplbmQKCmxvY2FsIGd1aSA9IEluc3RhbmNlLm5ldygiU2NyZWVuR3VpIikKZ3VpLlBhcmVudCA9IGdhbWUuQ29yZUd1aQoKbG9jYWwgZnJhbWUgPSBJbnN0YW5jZS5uZXcoIkZyYW1lIiwgZ3VpKQpmcmFtZS5TaXplID0gVURpbTIubmV3KDAsIDIwMCwgMCwgMTUwKQpmcmFtZS5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLjUsIC0xMDAsIDAuNSwgLTc1KQpmcmFtZS5CYWNrZ3JvdW5kQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoNTAsIDUwLCA1MCkKZnJhbWUuQWN0aXZlID0gdHJ1ZQpmcmFtZS5EcmFnZ2FibGUgPSB0cnVlCmZyYW1lLlZpc2libGUgPSBmYWxzZQoKbG9jYWwgdGl0bGUgPSBJbnN0YW5jZS5uZXcoIlRleHRMYWJlbCIsIGZyYW1lKQp0aXRsZS5TaXplID0gVURpbTIubmV3KDEsIDAsIDAsIDMwKQp0aXRsZS5CYWNrZ3JvdW5kQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoNzAsIDcwLCA3MCkKdGl0bGUuRm9udCA9IEVudW0uRm9udC5Tb3VyY2VTYW5zQm9sZAp0aXRsZS5UZXh0ID0gIkM1X1RTQiIKdGl0bGUuVGV4dENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCnRpdGxlLlRleHRTaXplID0gMjAKCmxvY2FsIHBsYXllcnNCdG4gPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iLCBmcmFtZSkKcGxheWVyc0J0bi5TaXplID0gVURpbTIubmV3KDAsIDE4MCwgMCwgMzApCnBsYXllcnNCdG4uUG9zaXRpb24gPSBVRGltMi5uZXcoMCwgMTAsIDAsIDQwKQpwbGF5ZXJzQnRuLkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigxMDAsIDEwMCwgMTAwKQpwbGF5ZXJzQnRuLkZvbnQgPSBFbnVtLkZvbnQuU291cmNlU2Fuc0JvbGQKcGxheWVyc0J0bi5UZXh0ID0gIlBsYXllcnMiCnBsYXllcnNCdG4uVGV4dENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCnBsYXllcnNCdG4uVGV4dFNpemUgPSAxOAoKbG9jYWwgZHVtbXlCdG4gPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iLCBmcmFtZSkKZHVtbXlCdG4uU2l6ZSA9IFVEaW0yLm5ldygwLCAxODAsIDAsIDMwKQpkdW1teUJ0bi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCAxMCwgMCwgODApCmR1bW15QnRuLkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigxMDAsIDEwMCwgMTAwKQpkdW1teUJ0bi5Gb250ID0gRW51bS5Gb250LlNvdXJjZVNhbnNCb2xkCmR1bW15QnRuLlRleHQgPSAiRHVtbXkiCmR1bW15QnRuLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQpkdW1teUJ0bi5UZXh0U2l6ZSA9IDE4Cgpsb2NhbCBzdG9wQnRuID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIiwgZnJhbWUpCnN0b3BCdG4uU2l6ZSA9IFVEaW0yLm5ldygwLCAxODAsIDAsIDMwKQpzdG9wQnRuLlBvc2l0aW9uID0gVURpbTIubmV3KDAsIDEwLCAwLCAxMjApCnN0b3BCdG4uQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMCwgMCkKc3RvcEJ0bi5Gb250ID0gRW51bS5Gb250LlNvdXJjZVNhbnNCb2xkCnN0b3BCdG4uVGV4dCA9ICJTdG9wIgpzdG9wQnRuLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQpzdG9wQnRuLlRleHRTaXplID0gMTgKCnBsYXllcnNCdG4uTW91c2VCdXR0b24xQ2xpY2s6Q29ubmVjdChmdW5jdGlvbigpCiAgICBydW5uaW5nID0gZmFsc2UKICAgIHRhc2sud2FpdCgwLjIpCiAgICB0YXNrLnNwYXduKGZvbGxvd1BsYXllcnMpCmVuZCkKCmR1bW15QnRuLk1vdXNlQnV0dG9uMUNsaWNrOkNvbm5lY3QoZnVuY3Rpb24oKQogICAgcnVubmluZyA9IGZhbHNlCiAgICB0YXNrLndhaXQoMC4yKQogICAgdGFzay5zcGF3bihmb2xsb3dEdW1teSkKZW5kKQoKc3RvcEJ0bi5Nb3VzZUJ1dHRvbjFDbGljazpDb25uZWN0KGZ1bmN0aW9uKCkKICAgIHJ1bm5pbmcgPSBmYWxzZQplbmQpCgpsb2NhbCBrZXlTeXN0ZW0gPSBJbnN0YW5jZS5uZXcoIkZyYW1lIiwgZ3VpKQprZXlTeXN0ZW0uU2l6ZSA9IFVEaW0yLm5ldygwLCAyMDAsIDAsIDEyMCkKa2V5U3lzdGVtLlBvc2l0aW9uID0gVURpbTIubmV3KDAuNSwgLTEwMCwgMC41LCAtNjApCmtleVN5c3RlbS5CYWNrZ3JvdW5kQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoNTAsIDUwLCA1MCkKa2V5U3lzdGVtLlZpc2libGUgPSB0cnVlCgpsb2NhbCBrZXlUaXRsZSA9IEluc3RhbmNlLm5ldygiVGV4dExhYmVsIiwga2V5U3lzdGVtKQprZXlUaXRsZS5TaXplID0gVURpbTIubmV3KDEsIDAsIDAsIDMwKQprZXlUaXRsZS5CYWNrZ3JvdW5kQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoNzAsIDcwLCA3MCkKa2V5VGl0bGUuRm9udCA9IEVudW0uRm9udC5Tb3VyY2VTYW5zQm9sZAprZXlUaXRsZS5UZXh0ID0gIk5o4bqtcCBLZXkiCmtleVRpdGxlLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQprZXlUaXRsZS5UZXh0U2l6ZSA9IDIwCgpsb2NhbCBrZXlJbnB1dCA9IEluc3RhbmNlLm5ldygiVGV4dEJveCIsIGtleVN5c3RlbSkKa2V5SW5wdXQuU2l6ZSA9IFVEaW0yLm5ldygwLCAxODAsIDAsIDMwKQprZXlJbnB1dC5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCAxMCwgMCwgNDApCmtleUlucHV0LkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigxMDAsIDEwMCwgMTAwKQprZXlJbnB1dC5Gb250ID0gRW51bS5Gb250LlNvdXJjZVNhbnMKa2V5SW5wdXQuUGxhY2Vob2xkZXJUZXh0ID0gIk5o4bqtcCBrZXkuLi4iCmtleUlucHV0LlRleHQgPSAiIgprZXlJbnB1dC5UZXh0Q29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjU1LCAyNTUsIDI1NSkKa2V5SW5wdXQuVGV4dFNpemUgPSAxOAoKbG9jYWwga2V5Q2hlY2sgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iLCBrZXlTeXN0ZW0pCmtleUNoZWNrLlNpemUgPSBVRGltMi5uZXcoMCwgODUsIDAsIDMwKQprZXlDaGVjay5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCAxMCwgMCwgODApCmtleUNoZWNrLkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigwLCAyNTUsIDApCmtleUNoZWNrLkZvbnQgPSBFbnVtLkZvbnQuU291cmNlU2Fuc0JvbGQKa2V5Q2hlY2suVGV4dCA9ICJDaGVjayBLZXkiCmtleUNoZWNrLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQprZXlDaGVjay5UZXh0U2l6ZSA9IDE4Cgpsb2NhbCBrZXlEaXNjb3JkID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIiwga2V5U3lzdGVtKQprZXlEaXNjb3JkLlNpemUgPSBVRGltMi5uZXcoMCwgODUsIDAsIDMwKQprZXlEaXNjb3JkLlBvc2l0aW9uID0gVURpbTIubmV3KDAsIDEwNSwgMCwgODApCmtleURpc2NvcmQuQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDAsIDAsIDI1NSkKa2V5RGlzY29yZC5Gb250ID0gRW51bS5Gb250LlNvdXJjZVNhbnNCb2xkCmtleURpc2NvcmQuVGV4dCA9ICJLZXkg4bufIERpcyIKa2V5RGlzY29yZC5UZXh0Q29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjU1LCAyNTUsIDI1NSkKa2V5RGlzY29yZC5UZXh0U2l6ZSA9IDE4CgprZXlDaGVjay5Nb3VzZUJ1dHRvbjFDbGljazpDb25uZWN0KGZ1bmN0aW9uKCkKICAgIGxvY2FsIGtleSA9IGdldEtleSgpCiAgICBpZiBrZXkgYW5kIGtleUlucHV0LlRleHQgPT0ga2V5IHRoZW4KICAgICAgICBrZXlTeXN0ZW0uVmlzaWJsZSA9IGZhbHNlCiAgICAgICAgZnJhbWUuVmlzaWJsZSA9IHRydWUKICAgIGVsc2UKICAgICAgICBrZXlUaXRsZS5UZXh0ID0gIktleSBzYWkhIgogICAgICAgIHRhc2sud2FpdCgxKQogICAgICAgIGtleVRpdGxlLlRleHQgPSAiTmjhuq1wIEtleSIKICAgIGVuZAplbmQpCgprZXlEaXNjb3JkLk1vdXNlQnV0dG9uMUNsaWNrOkNvbm5lY3QoZnVuY3Rpb24oKQogICAga2V5VGl0bGUuVGV4dCA9ICJM4bqleSBrZXkg4bufIERpc2NvcmQhIgogICAgdGFzay53YWl0KDEpCiAgICBrZXlUaXRsZS5UZXh0ID0gIk5o4bqtcCBLZXkiCmVuZCk=
